# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
    - name: Run tests with pytest
      run: |
        pytest --junitxml=test-results.xml

    - name: Parse test results and create badge JSON
      run: |
        if grep -q 'failures="0"' test-results.xml; then
          echo '{"schemaVersion": 1, "label": "tests", "message": "passing", "color": "brightgreen"}' > badge.json
        else
          echo '{"schemaVersion": 1, "label": "tests", "message": "failing", "color": "red"}' > badge.json
        fi

    - name: Deploy badge to gh-pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git checkout -b gh-pages
        mv badge.json badge.json
        git add badge.json
        git commit -m 'Update test badge'
        git push --force --quiet "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results.xml
